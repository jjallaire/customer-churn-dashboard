---
title: "DemoCo Customer Churn"
format: 
  dashboard:
    orientation: columns
# server: shiny
logo: images/logo.png
theme:
  - custom.scss
---

```{python}
import pandas as pd
from helpers import color_palette, plot_churn_reason, plot_contract_type, table_purchases
from matplotlib import rcParams
from itables import show

rcParams.update({"savefig.bbox": "tight"})

churn = pd.read_csv("data/churn.csv")
churn_reason = pd.read_csv("data/churn_reason.csv")
purchase_characteristics = pd.read_csv("data/purchase_characteristics.csv")
```

# Standard

## Column {.tabset}

```{python}
#| title: Plot
plot_churn_reason(churn_reason, "Standard")
```

```{python}
#| title: Data
show(churn_reason[churn_reason["product"]=="Standard"])
```

## Column {width=65%}

### Row

```{python}
#| component: valuebox
#| title: "Churn rate 2022"
#| icon: archive
#| color: "#7A6C5D"
dict(
  value = "17%"
)
```

```{python}
#| component: valuebox
#| title: "Current churn rate"
#| icon: graph-down
#| color: "#86C7ED"
dict(
  value = "14%"
)
```

```{python}
#| component: valuebox
#| title: "Churn rate goal"
#| icon: bullseye
#| color: "#A54657"
dict(
  value = "10%"
)
```


### Row 

#### Column {.tabset}

```{python}
#| title: Days since purchase
plot_contract_type(churn, "Standard")
```

```{python}
#| title: Purchase amount
plot_contract_type(
  churn, 
  "Standard", 
  "average_purchase_amount", 
  "Average purchase amount"
)
```

#### Column

##### Row

```{python}
#| title: Purchase characteristics
show(table_purchases(purchase_characteristics, "Standard"))
```

##### Row

##### Row

```{python}
#| title: Contracts by state
show(churn[churn['product'] == "Standard"]
  .groupby(['contract', 'state'])
  .size()
  .reset_index(name='count'))
```

# Premium

## Column {.tabset}

```{python}
#| title: Plot
plot_churn_reason(churn_reason, "Premium")
```

```{python}
#| title: Data
show(churn_reason[churn_reason["product"]=="Premium"])
```

## Column {width=65%}

### Row

```{python}
#| component: valuebox
#| title: "Churn rate 2022"
#| icon: archive
#| color: "#7A6C5D"
dict(
  value = "17%"
)
```

```{python}
#| component: valuebox
#| title: "Current churn rate"
#| icon: graph-down
#| color: "#86C7ED"
dict(
  value = "15%"
)
```

```{python}
#| component: valuebox
#| title: "Churn rate goal"
#| icon: bullseye
#| color: "#A54657"
dict(
  value = "10%"
)
```


### Row 

#### Column {.tabset}

```{python}
#| title: Days since purchase
plot_contract_type(churn, "Premium")
```

```{python}
#| title: Purchase amount
plot_contract_type(
  churn, 
  "Premium", 
  "average_purchase_amount", 
  "Average purchase amount"
)
```

#### Column

##### Row

```{python}
#| title: Purchase characteristics
show(table_purchases(purchase_characteristics, "Premium"))
```

##### Row

##### Row

```{python}
#| title: Contracts by state
show(churn[churn['product'] == "Premium"]
  .groupby(['contract', 'state'])
  .size()
  .reset_index(name='count'))
```

# Professional

## Column {.tabset}

```{python}
#| title: Plot
plot_churn_reason(churn_reason, "Premium")
```

```{python}
#| title: Data
show(churn_reason[churn_reason["product"]=="Premium"])
```

## Column {width=65%}

### Row

```{python}
#| component: valuebox
#| title: "Churn rate 2022"
#| icon: archive
#| color: "#7A6C5D"
dict(
  value = "17%"
)
```

```{python}
#| component: valuebox
#| title: "Current churn rate"
#| icon: graph-down
#| color: "#86C7ED"
dict(
  value = "13%"
)
```

```{python}
#| component: valuebox
#| title: "Churn rate goal"
#| icon: bullseye
#| color: "#A54657"
dict(
  value = "10%"
)
```


### Row 

#### Column {.tabset}

```{python}
#| title: Days since purchase
plot_contract_type(churn, "Professional")
```

```{python}
#| title: Purchase amount
plot_contract_type(
  churn, 
  "Professional", 
  "average_purchase_amount", 
  "Average purchase amount"
)
```

#### Column

##### Row

```{python}
#| title: Purchase characteristics
show(table_purchases(purchase_characteristics, "Professional"))
```

##### Row

```{python}
#| title: Contracts by state
show(churn[churn['product'] == "Professional"]
  .groupby(['contract', 'state'])
  .size()
  .reset_index(name='count'))
```


